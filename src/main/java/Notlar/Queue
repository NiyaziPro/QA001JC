

Java'da Queue, verilerin belirli bir düzen içinde saklandığı ve işlendiği bir veri yapısıdır.
       Ilk giren ilk çıkar (FIFO-first in first out) prensibine dayanır, yani ilk eklenen obje ilk çıkarılır.
       Queue, sıralı işlemler ve verilerin işlenmesi için kullanılır. Araya eleman eklemek mümkün değildir.

        İşte gerçek dünyadan birkaç örnek:
        Sıra Kuyruğu (Queue): Sıra bekleyenlerin önünde olan kişi önce hizmet alır. Bir örnek olarak,
        bir fast-food restoranındaki siparişlerin işlenmesini düşünebilirsiniz.
        İlk gelen sipariş, ilk hazırlanan ve teslim edilen sipariştir.
        Bilet Sırası: Bir konser veya etkinlik için bilet almak isteyen kişiler sıraya girerler.
        Biletler, sırayla satılır ve ilk gelen kişi ilk biletini alır.
        Çağrı Sırası: Müşteri hizmetleri çağrı merkezindeki müşteriler, sırayla operatörlere bağlanır.
        İlk çağrı bekleyeni önce konuşur, ardından sıradaki çağrı alınır.
        Dosya İşleme: Bilgisayar işletim sistemleri ve uygulamalar, dosyaları sırayla işlerler.
        Bir dosya işlem tamamlandığında, sıradaki dosya işlenir.

    Kuyruğun çalışma mantığı, elemanların kuyruğun sonuna eklenip başından çıkarılması şeklinde gerçekleşir.
    Queue, sıralı işlemler veya veriler gerektiğinde kullanışlıdır.

    Queue interface'i, LinkedList ve PriorityQueue gibi farklı sınıflar tarafından uygulanabilir.

    PriorityQueue (oncelik kuyrugu), bir FIFO (first in first out) yapısı ile nesneleri
    öncelik sırasına göre sıralayan bir kuyruk (Queue) aracıdır.
    Yani, en yüksek önceliğe sahip olan nesne, her zaman ilk olarak çıkar.

    Örneğin, sayıları içeren bir PriorityQueue kullanıyorsanız,
    sayılar kendi doğal sıralamalarına göre önceliklendirilir.

    Gerçek hayattan bir örnek olarak, bir hastanedeki hastaların acil servise giriş sırası
    priorityQueue olarak temsil edilebilir. Hastalar, aciliyet derecelerine göre sıralanır.
    Aciliyeti en yüksek olan hasta, her zaman ilk olarak tedavi edilir.


Deque (Double-Ended Queue), hem başından hem de sonundan eleman eklemeye ve çıkartmaya izin veren bir veri yapısıdır.
      Deque, FIFO (first in first out) veya LIFO (last in first out) olarak sıralanabilir.
      Java'da deque'ler, Deque interface'iyle temsil edilir.
      Deque arabirimini uygulayan en yaygın class'lar ArrayDeque ve LinkedList sınıflarıdır.
Gündelik hayatta kullanılabilecek bazı Deque örnekleri:
      1) İnternet Tarayıcıları: İnternet tarayıcıları, kullanıcıların web sayfalarını gezdikçe
      birçok sayfayı bir araya getirir. Bu sayfaları tarayıcı geçmişi adı verilen bir veri
      yapısında saklar. Kullanıcılar geri ve ileri tuşlarına bastığında, bu geçmişteki sayfalar
      Deque mantığıyla işlenir. Kullanıcı son ziyaret ettiği sayfadan geri gitmek istediğinde
      veya ileri gitmek istediğinde Deque yapısı kullanılır.
      2) Geri Al/Yeniden Uygula: Çoğu yazılım uygulaması, kullanıcıların yaptıkları işlemleri geri
      almasına ve tekrar uygulamasına olanak tanır. Örneğin, metin düzenleyicilerde bir yazıyı
      yazdıktan sonra geri al (command + z) tuşuna bastığınızda, son yapılan işlem geri alınır.
      Bu işlemi uygulamak için bir Deque kullanabilirsiniz.